{
    "total_repositories": 1,
    "repositories": {
        "/raid/adarsh/repos/lecopivo/SciLean": {
            "number_of_sorries": 293,
            "number_of_proofs_found": 27,
            "proofs_details": [
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FloatAsReal.lean",
                    "theorem_name": "SciLean.re_float",
                    "proof_text": "exact RCLike.re_eq_self_of_le le_rfl",
                    "newly_proved": "true"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.Prod.mk.arg_fstsnd.Bijective_rule_simple",
                    "proof_text": "exact Function.bijective_id"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.Prod.mk.arg_fstsnd.Bijective_rule_simple'",
                    "proof_text": "constructor <;> intro h\nall_goals aesop"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.Equiv.toFun.arg_a0.Bijective_rule",
                    "proof_text": "convert hf\nsimp [hf]\nexact f.bijective.comp hf"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.Equiv.invFun.arg_a0.Bijective_rule",
                    "proof_text": "convert hf\nsimp [hf]\nexact f.symm.bijective.comp hf"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsAffineMap.lean",
                    "theorem_name": "IsAffineMap.IsAffineMap_apply",
                    "proof_text": "constructor\nconstructor\nsimp\nsimp"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionSpaces/SmoothLinearMap.lean",
                    "theorem_name": "SciLean.SmoothLinearMap.zero_apply",
                    "proof_text": "rfl"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionSpaces/ContCDiffMapFD.lean",
                    "theorem_name": "SciLean.ContCDiffMapFD_eta",
                    "proof_text": "simp only [DFunLike.ext_iff]\naesop",
                    "newly_proved": "true"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionSpaces/ContCDiffMapFD.lean",
                    "theorem_name": "SciLean.ContCDiffMapFD.zero_apply",
                    "proof_text": "rfl"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.ContCDiffAt.id_rule",
                    "proof_text": "unfold SciLean.ContCDiffAt\ntauto"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.ContCDiffAt.comp_rule",
                    "proof_text": "rw [ContCDiffAt] at *\naesop"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.CDifferentiableAt.id_rule",
                    "proof_text": "unfold SciLean.CDifferentiableAt\ntauto"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.CDifferentiable.id_rule",
                    "proof_text": "intro x\nunfold SciLean.CDifferentiableAt\ntauto"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.CDifferentiableAt.comp_rule",
                    "proof_text": "rw [CDifferentiableAt] at *\naesop"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/Scalar.lean",
                    "theorem_name": "SciLean.scalar_div_one",
                    "proof_text": "simp"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/Scalar.lean",
                    "theorem_name": "SciLean.scalar_max_zero_one",
                    "proof_text": "rw [max_comm]\nsimp"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/Scalar.lean",
                    "theorem_name": "SciLean.scalar_min_zero_one",
                    "proof_text": "rw [min_comm]\nsimp"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Integral/ParametricInverse.lean",
                    "theorem_name": "SciLean.parametric_inverse_bijection",
                    "proof_text": "dsimp [ParametricInverseAt]\nintros\napply Function.invFun_eq\nsimpa using hf.2 y",
                    "newly_proved": "true"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/SemiInnerProductSpace.lean",
                    "theorem_name": "SciLean.normâ‚‚_scalar",
                    "proof_text": "simp"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Integral/Common.lean",
                    "theorem_name": "SciLean.Measure.prod_volume",
                    "proof_text": "rfl"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Integral/Common.lean",
                    "theorem_name": "SciLean.ite_pull_measureOf",
                    "proof_text": "split_ifs <;> rfl"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Integral/Common.lean",
                    "theorem_name": "SciLean.ite_pull_ennreal_toReal",
                    "proof_text": "split_ifs <;> rfl"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionSpaces/ContCDiffMap.lean",
                    "theorem_name": "SciLean.ContCDiffMap.zero_apply",
                    "proof_text": "rfl"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsLinearMap.lean",
                    "theorem_name": "IsLinearMap.isLinearMap_const_zero",
                    "proof_text": "constructor\nall_goals aesop"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsLinearMap.lean",
                    "theorem_name": "IsLinearMap.isLinearMap_apply",
                    "proof_text": "constructor\nall_goals aesop"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/Basic.lean",
                    "theorem_name": "SciLean.Distribution.action_iteD",
                    "proof_text": "aesop"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/InvFun.lean",
                    "theorem_name": "Function.invFun.id_rule",
                    "proof_text": "ext\napply Function.invFun_comp'\nexact Function.injective_id"
                }
            ],
            "unproved_sorries": [
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Approx/ApproxSolution.lean",
                    "theorem_name": "SciLean.approx_consistency"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.Prod.mk.arg_fstsnd.Bijective_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.Neg.neg.arg_a0.Bijective_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.Inv.inv.arg_a0.Bijective_rule_group"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.Inv.inv.arg_a0.Bijective_rule_field"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.HAdd.hAdd.arg_a0.Bijective_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.HAdd.hAdd.arg_a1.Bijective_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.HSub.hSub.arg_a0.Bijective_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.HSub.hSub.arg_a1.Bijective_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.HMul.hMul.arg_a0.Bijective_rule_group"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.HMul.hMul.arg_a1.Bijective_rule_group"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.HMul.hMul.arg_a0.Bijective_rule_field"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.HMul.hMul.arg_a1.Bijective_rule_field"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.HSMul.hSMul.arg_a1.Bijective_rule_group"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.HSMul.hSMul.arg_a1.Bijective_rule_field"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.HVAdd.hVAdd.arg_a1.Bijective_rule_group"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.HDiv.hDiv.arg_a0.Bijective_rule_group"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.HDiv.hDiv.arg_a0.Bijective_rule_field"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Meta/GenerateLinearMapSimp.lean",
                    "theorem_name": "IsLinearMap.sum_push"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Meta/GenerateLinearMapSimp.lean",
                    "theorem_name": "IsLinearMap.sum_pull"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsAffineMap.lean",
                    "theorem_name": "IsAffineMap.IsAffineMap_comp"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsAffineMap.lean",
                    "theorem_name": "IsAffineMap.IsAffineMap_pi"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsAffineMap.lean",
                    "theorem_name": "IndexType.sum.arg_f.IsAffineMap_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsAffineMap.lean",
                    "theorem_name": "SciLean.Basis.proj.arg_x.IsAffineMap_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsAffineMap.lean",
                    "theorem_name": "SciLean.DualBasis.dualProj.arg_x.IsAffineMap_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsAffineMap.lean",
                    "theorem_name": "SciLean.BasisDuality.toDual.arg_x.IsAffineMap_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsAffineMap.lean",
                    "theorem_name": "SciLean.BasisDuality.fromDual.arg_x.IsAffineMap_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Rand/Distributions/UniformI.lean",
                    "theorem_name": "SciLean.Rand.uniformI.pdf"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Diffeomorphism.lean",
                    "theorem_name": "SciLean.Diffeomorphism.id_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Diffeomorphism.lean",
                    "theorem_name": "SciLean.Diffeomorphism.comp_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Diffeomorphism.lean",
                    "theorem_name": "SciLean.Function.invFun.arg_a1.cderiv_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Diffeomorphism.lean",
                    "theorem_name": "SciLean.Function.invFun.arg_f_a1.cderiv_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Diffeomorphism.lean",
                    "theorem_name": "SciLean.Function.invFun.arg_f.cderiv_rule'"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/ParametricDistribFwdDeriv.lean",
                    "theorem_name": "SciLean.parDistribFwdDeriv.bind_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Data/ArrayType/Basic.lean",
                    "theorem_name": "SciLean.ArrayType.ext"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsContinuousLinearMap.lean",
                    "theorem_name": "SciLean.IsContinuousLinearMap.isContinuousLinearMap_differentiable"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsContinuousLinearMap.lean",
                    "theorem_name": "SciLean.IsContinuousLinearMap.Inner.inner.arg_a0.IsContinuousLinearMap_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsContinuousLinearMap.lean",
                    "theorem_name": "SciLean.IsContinuousLinearMap.Inner.inner.arg_a1.IsContinuousLinearMap_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsContinuousLinearMap.lean",
                    "theorem_name": "SciLean.IsContinuousLinearMap.starRingEnd.arg_a.IsContinuousLinearMap_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionSpaces/SmoothLinearMap.lean",
                    "theorem_name": "SciLean.SmoothLinearMap.apply_zero"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionSpaces/SmoothLinearMap.lean",
                    "theorem_name": "SciLean.SmoothLinearMap.fintype_sum_apply"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionSpaces/SmoothLinearMap.lean",
                    "theorem_name": "SciLean.SmoothLinearMap.indextype_sum_apply"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Rand/PushPullExpectation.lean",
                    "theorem_name": "SciLean.Rand.pull_E_affine"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionSpaces/ContCDiffMapFD.lean",
                    "theorem_name": "SciLean.ContCDiffMapFD_eval_CDifferentiable"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionSpaces/ContCDiffMapFD.lean",
                    "theorem_name": "SciLean.ContCDiffMapFD_eval_CDifferentiable'"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionSpaces/ContCDiffMapFD.lean",
                    "theorem_name": "SciLean.ContCDiffMapFD_apply_CDifferentiable"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionSpaces/ContCDiffMapFD.lean",
                    "theorem_name": "SciLean.ContCDiffMapFD_apply_CDifferentiableAt"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.ContCDiffAt.const_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.ContCDiffAt.apply_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.ContCDiffAt.pi_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.Prod.mk.arg_fstsnd.ContCDiffAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.Prod.fst.arg_self.ContCDiffAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.Prod.snd.arg_self.ContCDiffAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.Prod.snd.arg_self.ContCDiff_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.Neg.neg.arg_a0.ContCDiffAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.Neg.neg.arg_a0.ContCDiff_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.HAdd.hAdd.arg_a0a1.ContCDiffAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.HAdd.hAdd.arg_a0a1.ContCDiff_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.HSub.hSub.arg_a0a1.ContCDiffAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.HSub.hSub.arg_a0a1.ContCDiff_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.HSMul.hSMul.arg_a1.ContCDiffAt_rule_nat"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.HSMul.hSMul.arg_a1.ContCDiffAt_rule_int"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.IndexType.sum.arg_f.ContCDiffAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.Inner.inner.arg_a0a1.ContCDiffAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.normâ‚‚.arg_x.ContCDiffAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.Basis.proj.arg_x.ContCDiffAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.DualBasis.dualProj.arg_x.ContCDiffAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.BasisDuality.toDual.arg_x.ContCDiffAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.BasisDuality.fromDual.arg_x.ContCDiffAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.Basis.proj.arg_x.ContCDiff_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.DualBasis.dualProj.arg_x.ContCDiff_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.BasisDuality.toDual.arg_x.ContCDiff_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.BasisDuality.fromDual.arg_x.ContCDiff_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.CDifferentiableAt.const_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.CDifferentiable.const_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.CDifferentiable.comp_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.CDifferentiableAt.apply_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.CDifferentiable.apply_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.CDifferentiableAt.pi_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.CDifferentiable.pi_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.Prod.mk.arg_fstsnd.CDifferentiableAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.Prod.fst.arg_self.CDifferentiable_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.Prod.snd.arg_self.CDifferentiable_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.Neg.neg.arg_a0.CDifferentiable_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.HAdd.hAdd.arg_a0a1.CDifferentiable_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.HSub.hSub.arg_a0a1.CDifferentiable_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.HSMul.hSMul.arg_a1.CDifferentiable_rule_nat"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.HSMul.hSMul.arg_a1.CDifferentiable_rule_int"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.IndexType.sum.arg_f.CDifferentiableAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.IndexType.sum.arg_f.CDifferentiable_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.Inner.inner.arg_a0a1.CDifferentiable_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.SciLean.normâ‚‚.arg_x.CDifferentiable_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.Basis.proj.arg_x.CDifferentiable_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.DualBasis.dualProj.arg_x.CDifferentiable_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.BasisDuality.toDual.arg_x.CDifferentiable_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.BasisDuality.fromDual.arg_x.CDifferentiable_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasAdjDiff.lean",
                    "theorem_name": "SciLean.SciLean.normâ‚‚.arg_x.HasAdjDiffAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasAdjDiff.lean",
                    "theorem_name": "SciLean.SciLean.semiAdjoint.arg_y.HasAdjDiffAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/ParametricDistribDeriv.lean",
                    "theorem_name": "SciLean.DistribDiffrentiable.comp_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/ParametricDistribDeriv.lean",
                    "theorem_name": "SciLean.parDistribDeriv.comp_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/ParametricDistribDeriv.lean",
                    "theorem_name": "SciLean.Bind.bind.arg_fx.DistribDifferentiable_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/ParametricDistribDeriv.lean",
                    "theorem_name": "SciLean.toDistribution.linear_parDistribDeriv_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/ParametricDistribDeriv.lean",
                    "theorem_name": "SciLean.cintegral.arg_f.parDistribDeriv_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/Scalar.lean",
                    "theorem_name": "SciLean.scalar_abs_one"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/Scalar.lean",
                    "theorem_name": "SciLean.scalar_abs_zero"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/Scalar.lean",
                    "theorem_name": "SciLean.scalar_abs_neg"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/Scalar.lean",
                    "theorem_name": "SciLean.scalar_sqrt_one"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/Scalar.lean",
                    "theorem_name": "SciLean.scalar_sqrt_zero"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/Scalar.lean",
                    "theorem_name": "SciLean.scalar_max_one_zero"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/Scalar.lean",
                    "theorem_name": "SciLean.scalar_min_one_zero"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/FinVec.lean",
                    "theorem_name": "SciLean.inner_proj_dualProj"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/FinVec.lean",
                    "theorem_name": "SciLean.inner_dualBasis_basis"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/FinVec.lean",
                    "theorem_name": "SciLean.inner_dualBasis_proj"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/FinVec.lean",
                    "theorem_name": "SciLean.inner_basis_dualProj"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/FinVec.lean",
                    "theorem_name": "SciLean.proj_zero"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Integral/PlaneDecomposition.lean",
                    "theorem_name": "SciLean.parametric_inverse_affine'"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/SemiInnerProductSpace.lean",
                    "theorem_name": "SciLean.normâ‚‚_squared_nat"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/SemiInnerProductSpace.lean",
                    "theorem_name": "SciLean.normâ‚‚_squared"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/SemiInnerProductSpace.lean",
                    "theorem_name": "SciLean.scalar_norm"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/SemiInnerProductSpace.lean",
                    "theorem_name": "SciLean.normâ‚‚_prod"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/SemiInnerProductSpace.lean",
                    "theorem_name": "SciLean.norm2_scalar"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Data/ArrayType/Properties.lean",
                    "theorem_name": "GetElem.getElem.arg_cont.semiAdjoint_rule_simple"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Data/ArrayType/Properties.lean",
                    "theorem_name": "GetElem.getElem.arg_cont.revCDerivProj_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Data/ArrayType/Properties.lean",
                    "theorem_name": "LeanColls.Indexed.set.arg_contelem.IsLinearMap_rule_simple"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Data/ArrayType/Properties.lean",
                    "theorem_name": "LeanColls.Indexed.set.arg_contelem.revCDerivProj_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Data/ArrayType/Properties.lean",
                    "theorem_name": "LeanColls.Indexed.ofFn.arg_cont.semiAdjoint_rule_simple"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Functions/Gaussian.lean",
                    "theorem_name": "SciLean.gaussian.arg_Î¼x.cderiv_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Functions/Gaussian.lean",
                    "theorem_name": "SciLean.gaussian.arg_Î¼Ïƒx.CDifferentiableAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/FDeriv.lean",
                    "theorem_name": "SciLean.fderiv.apply_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Rand/Rand.lean",
                    "theorem_name": "SciLean.Rand.swap_bind"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Rand/Rand.lean",
                    "theorem_name": "SciLean.Rand.bind_E"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Rand/Rand.lean",
                    "theorem_name": "SciLean.Rand.E_smul"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Rand/Rand.lean",
                    "theorem_name": "SciLean.Rand.mean_add"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Rand/Rand.lean",
                    "theorem_name": "SciLean.Rand.mean_add'"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Rand/Rand.lean",
                    "theorem_name": "SciLean.Rand.bind_pdf"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Rand/Distributions/Flip.lean",
                    "theorem_name": "SciLean.Rand.flip.pdf_wrt_flip"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Rand/Distributions/Flip.lean",
                    "theorem_name": "SciLean.Rand.flip.pdf"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Rand/Distributions/Flip.lean",
                    "theorem_name": "SciLean.Rand.flip.integral"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Rand/Distributions/Flip.lean",
                    "theorem_name": "SciLean.Rand.add_as_flip_E"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Integral/CIntegral.lean",
                    "theorem_name": "SciLean.split_integral_over_set_of_ite"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Integral/CIntegral.lean",
                    "theorem_name": "SciLean.cintegral.arg_f.CDifferentiable_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Integral/CIntegral.lean",
                    "theorem_name": "SciLean.cintegral.arg_f.cderiv_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Integral/CIntegral.lean",
                    "theorem_name": "SciLean.cintegral.arg_f.IsLinearMap_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/Preimage.lean",
                    "theorem_name": "Set.HAdd.hAdd.arg_a0.preimage_rule_Ioo"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/Preimage.lean",
                    "theorem_name": "Set.HAdd.hAdd.arg_a1.preimage_rule_Ioo"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/Preimage.lean",
                    "theorem_name": "Set.HSub.hSub.arg_a0.preimage_rule_Ioo"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/Preimage.lean",
                    "theorem_name": "Set.HSub.hSub.arg_a1.preimage_rule_Ioo"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/Preimage.lean",
                    "theorem_name": "Set.Neg.neg.arg_a1.preimage_rule_Ioo"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Integral/Common.lean",
                    "theorem_name": "SciLean.Measure.restrict_restrict"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Integral/Common.lean",
                    "theorem_name": "SciLean.Measure.prod_restrict"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionSpaces/ContCDiffMap.lean",
                    "theorem_name": "SciLean.ContCDiffMap_eval_CDifferentiable"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionSpaces/ContCDiffMap.lean",
                    "theorem_name": "SciLean.ContCDiffMap_eval_CDifferentiable'"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionSpaces/ContCDiffMap.lean",
                    "theorem_name": "SciLean.ContCDiffMap_apply_CDifferentiable"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionSpaces/ContCDiffMap.lean",
                    "theorem_name": "SciLean.ContCDiffMap_apply_CDifferentiableAt"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsLinearMap.lean",
                    "theorem_name": "IsLinearMap.isLinearMap_pi"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsLinearMap.lean",
                    "theorem_name": "IndexType.sum.arg_f.IsLinearMap_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsLinearMap.lean",
                    "theorem_name": "SciLean.Basis.proj.arg_x.IsLinearMap_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsLinearMap.lean",
                    "theorem_name": "SciLean.DualBasis.dualProj.arg_x.IsLinearMap_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsLinearMap.lean",
                    "theorem_name": "SciLean.BasisDuality.toDual.arg_x.IsLinearMap_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsLinearMap.lean",
                    "theorem_name": "SciLean.BasisDuality.fromDual.arg_x.IsLinearMap_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Integral/Jacobian.lean",
                    "theorem_name": "SciLean.jacobian.comp_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.id_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.const_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.comp_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.let_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.Prod.mk.arg_fstsnd.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.Prod.fst.arg_self.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.Prod.snd.arg_self.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.HAdd.hAdd.arg_a0a1.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.HSub.hSub.arg_a0a1.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.Neg.neg.arg_a0.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.HMul.hMul.arg_a0.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.HMul.hMul.arg_a1.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.HSMul.hSMul.arg_a0.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.HSMul.hSMul.arg_a1.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.HDiv.hDiv.arg_a0.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.Finset.sum.arg_f.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.IndexType.sum.arg_f.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.Inner.inner.arg_a0.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.Inner.inner.arg_a1.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.starRingEnd.arg_a0.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.SciLean.semiAdjoint.arg_y.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/Basic.lean",
                    "theorem_name": "SciLean.Distribution.add_extAction"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/Basic.lean",
                    "theorem_name": "SciLean.Distribution.sub_extAction"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/Basic.lean",
                    "theorem_name": "SciLean.Distribution.smul_extAction"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/Basic.lean",
                    "theorem_name": "SciLean.Distribution.neg_extAction"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/Basic.lean",
                    "theorem_name": "SciLean.Distribution.fintype_sum_extAction"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/Basic.lean",
                    "theorem_name": "SciLean.Distribution.indextype_sum_extAction"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/Basic.lean",
                    "theorem_name": "SciLean.Distribution.iteD_same"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/Basic.lean",
                    "theorem_name": "SciLean.Distribution.extAction_iteD"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/Basic.lean",
                    "theorem_name": "SciLean.Distribution.extAction_iteD'"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/Basic.lean",
                    "theorem_name": "SciLean.Distribution.postComp.arg_T.IsSmoothLinarMap_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/Basic.lean",
                    "theorem_name": "SciLean.Function.toDistribution_zero"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.cderiv.arg_f.IsSmoothLinearMap_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.cderiv.id_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.cderiv.const_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.cderiv.comp_rule_at"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.cderiv.comp_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.cderiv.let_rule_at"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.cderiv.let_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.cderiv.apply_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.cderiv.pi_rule_at"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.cderiv.pi_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.Prod.mk.arg_fstsnd.cderiv_rule_at"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.HAdd.hAdd.arg_a0.cderiv_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.HAdd.hAdd.arg_a1.cderiv_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.HSub.hSub.arg_a0.cderiv_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.HSub.hSub.arg_a1.cderiv_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.Neg.neg.arg_a0.cderiv_rule'"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.HMul.hMul.arg_a0a1.cderiv_rule_at"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.HSMul.hSMul.arg_a0a1.cderiv_rule_at"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.HDiv.hDiv.arg_a0a1.cderiv_rule_at"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.HDiv.hDiv.arg_a0a1.cderiv_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.IndexType.sum.arg_f.cderiv_rule_at"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.ite.arg_chte.cderiv_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.Inner.inner.arg_a0a1.cderiv_rule_at"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.SciLean.normâ‚‚.arg_x.cderiv_rule_at"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.SciLean.cderiv.arg_dx.CDifferentiableAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.SciLean.cderiv.arg_dx.cderiv_rule_at"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/FwdFDeriv.lean",
                    "theorem_name": "SciLean.FwdFDeriv.HDiv.hDiv.arg_a0a1.fwdFDeriv_rule_at"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/FwdFDeriv.lean",
                    "theorem_name": "SciLean.FwdFDeriv.FinType.sum.arg_f.fwdFDeriv_rule_at"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/RevDeriv.lean",
                    "theorem_name": "SciLean.revDerivUpdate.pi_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/RevDeriv.lean",
                    "theorem_name": "SciLean.revDerivProjUpdate.pi_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/RevDeriv.lean",
                    "theorem_name": "IndexType.sum.arg_f.revDerivProj_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/RevDeriv.lean",
                    "theorem_name": "IndexType.sum.arg_f.revDerivProjUpdate_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/FwdDeriv.lean",
                    "theorem_name": "SciLean.fwdDeriv.IndexType.sum.arg_f.fwdDeriv_rule_at"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/FwdDeriv.lean",
                    "theorem_name": "SciLean.fwdDeriv.IndexType.sum.arg_f.fwdDeriv_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.const_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.comp_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.apply_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.pi_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.Prod.fst.arg_self.HasSemiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.Prod.snd.arg_self.HasSemiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.Neg.neg.arg_a0.HasSemiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.HAdd.hAdd.arg_a0a1.HasSemiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.HSub.hSub.arg_a0a1.HasSemiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.HMul.hMul.arg_a0.HasSemiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.HMul.hMul.arg_a1.HasSemiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.HSMul.hSMul.arg_a0.HasSemiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.HSMul.hSMul.arg_a1.HasSemiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.HDiv.hDiv.arg_a0.HasSemiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.SciLean.IndexType.sum.arg_f.HasSemiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.starRingEnd.arg_a.HasSemiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.Inner.inner.arg_a0.HasSemiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.Inner.inner.arg_a1.HasSemiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.SciLean.semiAdjoint.arg_y.HasSemiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Modules/DifferentialEquations/OdeSolvers/Solvers.lean",
                    "theorem_name": "SciLean.explicitSymplecticEuler_eq_implicitSymplecticEulerV1"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Modules/DifferentialEquations/OdeSolve.lean",
                    "theorem_name": "SciLean.odeSolve.arg_ftâ‚€txâ‚€.fwdDeriv_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Modules/DifferentialEquations/OdeSolve.lean",
                    "theorem_name": "SciLean.odeSolve.arg_xâ‚€.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Modules/DifferentialEquations/OdeSolve.lean",
                    "theorem_name": "SciLean.odeSolve.arg_xâ‚€.revCDeriv_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Util/SolveFun.lean",
                    "theorem_name": "SciLean.decompose_has_unique_solution"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Util/SolveFun.lean",
                    "theorem_name": "SciLean.decomposeSolution"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/InvFun.lean",
                    "theorem_name": "Function.invFun.comp_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/InvFun.lean",
                    "theorem_name": "Function.invFun.let_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/InvFun.lean",
                    "theorem_name": "Function.invFun.Prod.mk.arg_fstsnd.invFun_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/InvFun.lean",
                    "theorem_name": "Function.invFun.Neg.neg.arg_a0.invFun_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/InvFun.lean",
                    "theorem_name": "Function.invFun.Inv.inv.arg_a0.invFun_rule_group"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/InvFun.lean",
                    "theorem_name": "Function.invFun.Inv.inv.arg_a0.invFun_rule_field"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/InvFun.lean",
                    "theorem_name": "Function.invFun.HAdd.hAdd.arg_a0.invFun_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/InvFun.lean",
                    "theorem_name": "Function.invFun.HAdd.hAdd.arg_a1.invFun_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/InvFun.lean",
                    "theorem_name": "Function.invFun.HSub.hSub.arg_a0.invFun_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/InvFun.lean",
                    "theorem_name": "Function.invFun.HSub.hSub.arg_a1.invFun_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/InvFun.lean",
                    "theorem_name": "Function.invFun.Equiv.toFun.arg_a0.invFun_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/InvFun.lean",
                    "theorem_name": "Function.invFun.Equiv.invFun.arg_a0.invFun_rule"
                }
            ],
            "number_of_premises_theorems_retrieved": 108180,
            "num_files_traced": 2851,
            "PR": ""
        }
    }
}